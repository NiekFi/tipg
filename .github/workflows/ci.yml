name: CI

# On every pull request, but only on push to master
on:
  push:
    branches:
    - master
    tags:
    - '*'
    paths:
      # Only run test and docker publish if somde code have changed
      - 'pyproject.toml'
      - 'tifeatures/**'
      - 'tests/**'
      - '.pre-commit-config.yaml'
      - 'dockerfiles/**'
  pull_request:
env:
  LATEST_PY_VERSION: '3.9'

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install lib postgres
        run: |
          sudo apt update
          wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O- | sudo apt-key add -
          echo "deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main" | sudo tee /etc/apt/sources.list.d/postgresql.list
          sudo apt update
          sudo apt-get install --yes libpq-dev postgis postgresql-14-postgis-3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install codecov pre-commit

      - name: Install module
        run: python -m pip install .["test"]

      - name: Run pre-commit
        if: ${{ matrix.python-version == env.LATEST_PY_VERSION }}
        run: pre-commit run --all-files

      - name: Run tests
        run: python -m pytest --cov tifeatures --cov-report xml --cov-report term-missing

      - name: Upload Results
        if: ${{ matrix.python-version == env.LATEST_PY_VERSION }}
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: ${{ matrix.python-version }}
          fail_ci_if_error: false
